{
  "_args": [
    [
      "deathbycaptcha",
      "/home/gloriouseggroll/Documents/FinalWebApp"
    ]
  ],
  "_from": "deathbycaptcha@latest",
  "_id": "deathbycaptcha@0.0.3",
  "_inCache": true,
  "_installable": true,
  "_location": "/deathbycaptcha",
  "_npmUser": {
    "email": "me@samcday.com.au",
    "name": "samcday"
  },
  "_npmVersion": "1.2.18",
  "_phantomChildren": {
    "aws-sign": "0.3.0",
    "boom": "0.4.2",
    "cookie-jar": "0.3.0",
    "cryptiles": "0.2.2",
    "sntp": "0.2.4"
  },
  "_requested": {
    "name": "deathbycaptcha",
    "raw": "deathbycaptcha",
    "rawSpec": "",
    "scope": null,
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/deathbycaptcha/-/deathbycaptcha-0.0.3.tgz",
  "_shasum": "dfa64202dae4f9fc81babf2250273c1dcd8fe47a",
  "_shrinkwrap": null,
  "_spec": "deathbycaptcha",
  "_where": "/home/gloriouseggroll/Documents/FinalWebApp",
  "author": {
    "email": "sam.c.day@gmail.com",
    "name": "Sam Day",
    "url": "http://samcday.com.au/"
  },
  "dependencies": {
    "request": "~2.21.0"
  },
  "description": "DeathByCaptcha Node.js client",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "dfa64202dae4f9fc81babf2250273c1dcd8fe47a",
    "tarball": "https://registry.npmjs.org/deathbycaptcha/-/deathbycaptcha-0.0.3.tgz"
  },
  "engines": {
    "node": "*"
  },
  "main": "./deathbycaptcha",
  "maintainers": [
    {
      "name": "samcday",
      "email": "sam.c.day@gmail.com"
    }
  ],
  "name": "deathbycaptcha",
  "optionalDependencies": {},
  "readme": "# DeathByCaptcha.js `v0.0.2`\n\nNode.js client library for the [DeathByCaptcha](http://www.deathbycaptcha.com) service.\n\n## Installation\n\nDeathByCaptcha.js is available in **npm**.\n\n`npm install deathbycaptcha`\n\n## Usage\n\nUsing the API goes a little something like this:\n\n\tDeathByCaptcha = require(\"deathbycaptcha\");\n\tvar dbc = new DeathByCaptcha(\"your_dbc_user\", \"your_dbc_pass\");\n\n\tdbc.solve(fs.readFileSync(\"/your/captcha/file\"), function(err, id, solution) {\n\t\tif(err) return console.error(err); // onoes!\n\n\t\tif(solution !== \"moo\") {\n\t\t\t// It was wrong!\n\t\t\tdbc.report(id, function(err) {\n\t\t\t\tif(err) return console.error(err); // ONOES!\n\t\t\t});\n\t\t}\n\t});\n\n### Solve CAPTCHA\n\nSend a CAPTCHA image file to DeathByCaptcha to solve.\n\n**DeathByCaptcha.solve(captchaImage, callback);**\n\nCallback accepts three parameters:\n\n* *error*: if something went wrong sending or solving the CAPTCHA.\n* *captchaId*: the ID of the CAPTCHA.\n* *solution*: the solution to the CAPTCHA, as text.\n\n*Example:*\n\n\tdbc.solve(fs.readFileSync(\"/your/captcha/file\"), function(err, id, solution) {\n\t\tif(err) return console.error(err);\n\t\tconsole.log(\"CAPTCHA solution is\", solution);\n\t});\n\n### Get CAPTCHA\n\nGets a previously solved (or in progress) CAPTCHA by ID. If the CAPTCHA is still in progress the callback will wait for it.\n\n**DeathByCaptcha.get(captchaId, callback);**\n\nCallback takes 3 arguments:\n\n* *error*: if something went wrong.\n* *solution*: the solution for the CAPTCHA.\n* *isCorrect*: true/false if the CAPTCHA is \"correct\" (hasn't beenr reported)\n\n*Example:*\n\n\tdbc.get(12345, function(err, solution, isCorrect) {\n\t\tif(err) return console.error(err);\n\t\t// isComplete is false if the CAPTCHA has been reported (see below).\n\t\tconsole.log(\"Captcha solution is\", solution);\n\t\tconsole.log(\"Is it correct?\", isCorrect);\n\t});\n\n### Report CAPTCHA\n\nUse this if you have reason to believe DeathByCaptcha incorrectly solved your CAPTCHA image.\n\n**DeathByCaptcha.report(captchaId, callback);**\n\nCallback will be handed an error if something went wrong, else nothing will be passed.\n\n*Example:*\n\n\tdbc.report(12345, function(err) {\n\t\tif(err) return console.error(err);\n\t\tconsole.log(\"CAPTCHA was reported successfully.\")\n\t\tconsole.log(\"If it wasn't older than an hour, it should have refunded\");\n\t});\n\n### Get Balance\n\nLoads balance stats for your account from DeathByCaptcha.\n\n**DeathByCaptcha.balance(callback);**\n\nCallback:\n\n* *error*: if something went wrong\n* *credits*: computed number of CAPTCHA solutions remaining.\n* *balance*: balance in US cents.\n* *rate*: cost per solution in US cents.\n\n*Example:*\n\n\tdbc.balance(function(err, credits, balance, rate) {\n\t\tif(err) return console.error(err);\n\t\tconsole.log(credits + \" credits remaining\");\n\t\tconsole.log(\"($\" + (balance / 100) + \" @ \" + rate + \"c/solution\");\n\t});\n\n## Fineprint\n\ndeathbycaptcha.js is Copyright (c) 2012 Sam Day\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nSee `COPYING` for more information.",
  "readmeFilename": "README.md",
  "version": "0.0.3"
}
